let map = fn(arr, func) {
    let iter = fn(arr, acc) {
		if (len(arr) == 0) {
		    acc
		} else {
		    let current = func(first(arr));
			let acc = push(acc, current);
			iter(rest(arr), acc)
		};
	};
	iter(arr, [])
};

let reduce = fn(arr, initial, func) {
    let iter = fn(arr, result) {
	    if (len(arr) == 0) {
		    result
		} else {
		    let result = func(result, first(arr));
			iter(rest(arr), result)
		}
	}
	iter(arr, initial)
};
let add = fn(x, y) {x + y};
let sub = fn(x, y) {x - y};
let mul = fn(x, y) {x * y};
let div = fn(x, y) {x / y};

let sum = fn(arr) {
    reduce(arr, 0, add)
};

let product = fn(arr) {
    reduce(arr, 1, mul)
};

let split = fn(string, splitVal) {
    let iter = fn(string, out, current) {
    	if (len(string) == 0) {
		return push(out, current);
	};

	let val = first(string);
	let _ = puts(val);
	let _ = puts(val == splitVal);
	if (val == splitVal) {
		let out = push(out, current);
		let current = "";
	} else {
		let current = current + val;
	};
	return iter(rest(string), out, current)
    };
    return iter(string, [], "");
};
